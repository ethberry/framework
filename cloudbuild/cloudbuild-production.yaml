#cloudbuild.yaml
steps:
  # Download .env file from bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "-r", "gs://framework-env/app/.env", ".env"]
  # Download firebase file from bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "-r", "gs://framework-env/app/gemunion-firebase-key.json", "gemunion-firebase-key.json"]
  # Download gcloud file from bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "-r", "gs://framework-env/app/halogen-framing-key.json", "halogen-framing-key.json"]
  # Download app/.env file from bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "-r", "gs://framework-env/app/services/*", "services/"]
  # Download app/.env file from bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "-r", "gs://framework-env/app/contracts/*", "contracts/"]

  # Upload docker-compose script to bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["-m", "cp", "-r", "docker-compose-cloudbuild.yml", "gs://framework-env/app/"]
  # Upload instance template startup script to bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["-m", "cp", "-r", "framework-env/startup/instance-template-startup.sh", "gs://framework-env/startup/"]
  # Upload nginx conf to bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["-m", "cp", "-r", "nginx/admin.prod.conf", "gs://framework-env/app/nginx/admin.prod.conf"]

  # Add npmrc url
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: "bash"
    args: ['-c', 'echo @gemunion:registry=https://npm.pkg.github.com/ >> .npmrc']
  # Add npmrc token from build env
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: "bash"
    args: ['-c', 'echo //npm.pkg.github.com/:_authToken=$$GH_TOKEN >> .npmrc']
    secretEnv: ['GH_TOKEN']
  # Build image with docker-compose
  - name: 'docker/compose:1.29.2'
    id: 'dockerBuild'
    args: ['-f', 'docker-compose.dependencies.yml', 'build', '--build-arg', 'GEMUNION_PRIVATE_KEY_PROD=$$GEMUNION_PRIVATE_KEY_PROD']
    secretEnv: [ 'GEMUNION_PRIVATE_KEY_PROD' ]
  # Tag push image to google registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'dockerTag'
    waitFor:
      - 'dockerBuild'
    args: ['tag', 'framework-packages:latest', 'gcr.io/$PROJECT_ID/$REPO_NAME-img']
  # Start update of autoscale group prod
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'replaceGroup'
    waitFor:
      - 'dockerTag'
    args:
      - "compute"
      - "instance-groups"
      - "managed"
      - "rolling-action"
      - "replace"
      - "fw-group"
      - "--max-unavailable=4"
      - "--region=us-central1"
images: ['gcr.io/$PROJECT_ID/$REPO_NAME-img']
timeout: 3600s
options:
  machineType: 'E2_HIGHCPU_32'
availableSecrets:
  secretManager:
    - versionName: projects/1011891726242/secrets/GITHUBTOKEN/versions/2
      env: GH_TOKEN
    - versionName: projects/1011891726242/secrets/GEMUNION_PRIVATE_KEY_PROD/versions/1
      env: GEMUNION_PRIVATE_KEY_PROD